
<BSModal @bind-Show="ShowModal" IsManual="true" @ref="myModal" Class="custom-modal">
    <BSModalHeader Class="custom-modal-header">Vil du slette</BSModalHeader>
    <BSModalContent Class="custom-modal-body">
        @Message
    </BSModalContent>
    <BSModalFooter  class="custom-modal-footer">
        <BSButton MarginStart="Margins.Auto" Color="BSColor.Secondary" @onclick="CancelDelete">Nej</BSButton>
        <BSButton Color="BSColor.Primary" @onclick="ConfirmDelete">Ja</BSButton>
    </BSModalFooter>
</BSModal>


@code {
    private BSModal? myModal { get; set; }
    [Parameter] public string Message { get; set; } = "Vil du slette.";
    [Parameter] public EventCallback OnDeleteConfirmed { get; set; }

    private bool ShowModal { get; set; } = false;

    public async Task Show(string message)
    {
        Message = message;
        await myModal.ShowAsync();
    }

    // Close the dialog without taking any action
    private async Task CancelDelete()
    {
        await myModal.HideAsync();
    }

    // Confirm delete action and notify the parent component
    private async Task ConfirmDelete()
    {
        if (OnDeleteConfirmed.HasDelegate)
        {
            await myModal.HideAsync();
            await OnDeleteConfirmed.InvokeAsync(null);
        }
    }
}