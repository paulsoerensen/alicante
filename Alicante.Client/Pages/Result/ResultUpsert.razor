@page "/result/upsert/match/{matchId:int}"
@page "/result/upsert/{id:int}"
<h3>registrer resultat</h3>
@rendermode @(new InteractiveAutoRenderMode(false))

@* <RadzenTemplateForm Data="@Model" Submit="@((MatchModel args) => { Submit(args); })">
    <RadzenRow Gap="2rem" class="rz-p-0 rz-p-lg-4">
        <RadzenColumn Size="12">
            <RadzenStack>
            <RadzenFieldset Text="Resultat">
                <RadzenStack  Gap="1rem">
                <RadzenRow AlignItems="AlignItems.Center">
                    <RadzenColumn Size="12" SizeMD="4">
                                <RadzenLabel Text="Spiller" Component="PlayerId" />
                    </RadzenColumn>
                    <RadzenColumn Size="12" SizeMD="8">
                        <RadzenDropDown @bind-Value="Model.PlayerId" AllowClear="true" Placeholder="Vælg spiller"
                                        Data="@players" Style="width: 100%;" 
                                        TextProperty="PlayerName" ValueProperty="PlayerId" Name="PlayerId">
                        </RadzenDropDown>
                    </RadzenColumn>
                </RadzenRow>
                <RadzenRow AlignItems="AlignItems.Center">
                    <RadzenColumn Size="12" SizeMD="4">
                        <RadzenLabel Text="Match dato" Component="MatchDate" />
                    </RadzenColumn>
                    <RadzenColumn Size="12" SizeMD="8">
                        <RadzenDatePicker Style="width: 100%;" Name="MatchDate" DateFormat="dd-MM-yyyy" @bind-Value="Model.MatchDate" />
                    </RadzenColumn>
                </RadzenRow>
                <RadzenRow AlignItems="AlignItems.Center">
                    <RadzenColumn Size="12" SizeMD="4">
                        <RadzenLabel Text="2. runde" Component="SecondRound" />
                    </RadzenColumn>
                    <RadzenColumn Size="12" SizeMD="8">
                        <RadzenCheckBox @bind-Value=@Model.SecondRound Name="SecondRound" />
                    </RadzenColumn>
                </RadzenRow>
    
                </RadzenStack>
            </RadzenFieldset>
            </RadzenStack>
        </RadzenColumn>
    </RadzenRow>
    <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Center" Gap="1rem" class="rz-mt-8 rz-mb-4">
        <RadzenButton ButtonType="ButtonType.Submit" Size="ButtonSize.Large" Icon="save" Text="Gem" />
        <RadzenButton ButtonStyle="ButtonStyle.Light" Variant="Variant.Flat" Size="ButtonSize.Large" Icon="cancel" Text="Fortryd" Click="@Cancel" />
    </RadzenStack>
</RadzenTemplateForm> *@



<EditForm OnValidSubmit="Submit" FormName="ResultUpsert" Model="Model">
    <DataAnnotationsValidator />
    <div class="container">
        <div class="row mb-3">
            <div class="col-md-6">
                <label>Match</label>
                <InputNumber class="form-control" @bind-Value="Model.MatchId" />
                    <ValidationMessage For="() => Model.MatchId" />
            </div>
        </div> 
        <div class="row mb-3">
            <div class="col-md-6">
                <label>Navn</label>
                <InputNumber class="form-control" @bind-Value="Model.Hcp" />
                <ValidationMessage For="() => Model.Hcp" />
            </div>
            <div class="col-md-6">
                <label>Hcp</label>
                <InputNumber class="form-control" @bind-Value="Model.Score" />
                <ValidationMessage For="() => Model.Score" />
            </div>
        </div>

        <div class="row mb-3">
            <div class="col-md-6">
                <label>Birdies</label>
                <InputNumber class="form-control" @bind-Value="Model.Birdies" />
                <ValidationMessage For="() => Model.Birdies" />
            </div>
            <div class="col-md-6">
                <label>Par 3 score</label>
                <InputNumber class="form-control" @bind-Value="Model.Par3" />
                <ValidationMessage For="() => Model.Par3" />
            </div>
        </div>

        <button class="btn btn-secondary" type="submit">Save</button>
    </div>
</EditForm>